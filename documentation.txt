Примечание: все значения должны передаваться в функции в строковом виде, в независимости от их типа.

is_user_exists(user_id): boolean
Возвращает True, если пользователь с идентификатором user_id (число) зарегестрирован в базе данных, и False в противном случе.

create_user(user_id, name, age, sex, partner_sex): none
Регестрирует пользователя с идентификатором user_id (число) в базе данных, записывая в нее следующие данные:
	name - Имя пользователя (строка).
	age - Возраст пользователя (натуральное число)
	sex - Пол пользователя (строка, 'm' - мужской, 'f' - женский).
	partner_sex - Предпочитаемый пол пользователей для знакомства (строка, 'm' - мужской, 'f' - женский, 'any' - любой).
При попытке регистрации уже зарегистрированного пользователя в консоль будет выведенно сообщение об ошибке.
Ничего не возвращает.

update_userdata(user_id, data_name, data): none
Перезаписывает данные пользователя c идентификатором user_id (число). 
	data_name - название данных, которые необходимо перезаписать (строка, 'name', 'age', 'sex' или 'partner_sex').
	data - новое значение указанных данных (тип соотвествует типу данных под этим именем.
Если пользователь с идентификатором user_id (число) не зарегистрирован в базе данных, в консоль будет выведенно сообзение об ошибке.
Ничего не возвращает.

read_userdata(user_id, data_name): string
Возвращает данные под указанным именем data_name (строка) для пользователя с идентификатором user_id (число).
Если пользователь с идентификатором user_id (число) не зарегистрирован в базе данных, в консоль будет выведенно сообзение об ошибке.
Всегда возвращает строку, которую по необходимости можно преобразовать в любой другой тип данных.


delete_user(user_id): none
Удаляет пользователя с идентификатором user_id (число) из базы данных.
Если пользователь с идентификатором user_id (число) не зарегистрирован в базе данных, в консоль будет выведенно сообзение об ошибке.
Ничего не возвращает.

Разные функции в зависимости от своего функционала могут вызывать два типа исключений (ошибок):
	UserIDError - вызывается, когда нужно провести какие-либо манипуляции с пользователем, но он либо есть базе данных, либо наоборот, 
		его в ней нет (в зависимости от того, нужно ли нам, чтобы он там был, или наоборот, нужно, чтобы его там не было)
	DatabseError - вызывается при какой-либо ошибке в работе с базой данных (содержит чисто техническую информацию)